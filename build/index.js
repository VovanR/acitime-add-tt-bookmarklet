javascript:!function(){const tableElement=document.getElementById("actualTTRows"),editor=new class{constructor(){this._dialog=null,this._form=null,this._initialize()}_initialize(){const element=document.createElement("div");element.innerHTML='\n<dialog style="width: 200px; padding: 15px; background: white; border: none; border-radius: 4px; box-shadow: 0 0 7px 3px rgba(0, 0, 0, 0.2)">\n  <form action="" style="display: flex; align-items: center; justify-content: flex-end; flex-wrap: wrap; gap: 10px">\n    <output name="previousTime" for="time"></output> â†’ <output name="nextTime" for="time"></output>\n    <input\n      name="time"\n      placeholder="0:00"\n      autofocus="autofocus"\n      required="required"\n      pattern="[0-2]?[0-9]:[0-5][0-9]"\n      style="text-align: right; width: 100%"\n    >\n    <label title="Available soon"><input type="checkbox" name="editMode" disabled> Edit</label>\n    <button>Save</button>\n    <button type="reset">Cancel</button>\n  </form>\n</dialog>\n',this._dialog=element.querySelector("dialog"),this._form=element.querySelector("form"),this._form.addEventListener("reset",(()=>{this.close()})),document.body.appendChild(element)}open(inputElement){this._dialog.showModal();const previousValue=inputElement.value||"0:00";this._form.previousTime.value=previousValue,this._form.nextTime.value=previousValue;const submitHandler=event=>{event.preventDefault();const addedMinutes=this._valueToMinutes(this._form.time.value),resultMinutes=this._valueToMinutes(previousValue)+addedMinutes;inputElement.value=this._minutesToValue(resultMinutes),inputElement.dispatchEvent(new Event("change")),this.close()},inputHandler=event=>{if(event.target===this._form.time)if(this._form.time.validity.valid){const value=this._form.time.value;this._form.editMode.checked?this._form.nextTime.value=value:this._form.nextTime.value=this._addValues(previousValue,value)}else this._form.nextTime.value=previousValue};this._form.addEventListener("submit",submitHandler),this._form.addEventListener("input",inputHandler),this._dialog.addEventListener("close",(()=>{this._form.removeEventListener("submit",submitHandler),this._form.removeEventListener("input",inputHandler),this._reset()}),{once:!0})}close(){this._dialog.close()}_reset(){this._form.reset()}_valueToMinutes(value){if(!value)return 0;const[hours,minutes]=value.split(":");return 60*parseInt(hours,10)+parseInt(minutes,10)}_minutesToValue(minutes){const resultMinutes=minutes%2560;return`${(minutes-resultMinutes)/60}:${resultMinutes>9?resultMinutes:"0"+resultMinutes}`}_addValues(value1,value2){return this._minutesToValue(this._valueToMinutes(value1)+this._valueToMinutes(value2))}};tableElement.addEventListener("click",(event=>{event.target.classList.contains("inputTT")&&editor.open(event.target)}))}();void(0)